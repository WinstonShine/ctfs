# cake-ctf
    # vtables
        win addr 0x55f7a716861a
         
        the idea was to create a pointer to the win function, then
        replace the vtable address to point to that pointer

    # bofww
        win func 0x00000000004012f6

        no pie,
        no executable stack,
        canary present, < don't know how to deal with this yet
        
        when viewing the stack at the end of input function
        i believe x/304x $sp shows the stack all the way up until the canary

        I kind of brute forced this by sending long input to cause stack smashing,
        then adjusting to find the longest input i could send without causing stack smashing
        is the stack canary going to be different on every run?
            if so i need to leak this value somehow

        0x7fffffffe1a8: 0x00    0xa0    0x27    0x00    0xaa    0xa4    0xa4    0x0d
        yes the value is not the same
        canary addr -> 0x7fffffffe1a8

    # memorial-cabbage
        this has all protections on
        
        allows user to continuesly read or write from a tmp memo file
        buf is always 0x1000
        written to by fgets(buf, size of buf -1)
            
        could the vuln be on this scanf?
        (scanf("%d%*c", &choice) != 1)
        choice is int so this would have to be some integer overflow/underflow exploit.

